# uncomment next line to start profiling
# zmodload zsh/zprof

ZSH_DISABLE_COMPFIX="true"

export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES

# If you come from bash you might have to change your $PATH.
export PATH=/opt/homebrew/bin:$HOME/.npm-packages/bin:$HOME/local/bin:$HOME/local/node/bin:$HOME/local/yarn/bin:$HOME/bin:/usr/local/bin:/usr/local/share/dotnet:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes

ZSH_THEME="avit"
# ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.

plugins=(zsh-autosuggestions)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#
if [[ $OSTYPE == "linux-gnu"* ]]; then
  export DISPLAY=:0.0
fi

if [[ -f ~/nvim/bin/nvim ]]; then
  alias vim='~/nvim/bin/nvim'
  alias vi=vim
  alias v=vim
  alias vimdiff='vim -d'
else
  echo 'Need to install neovim in ~/nvim-osx64/'
fi

if [[ -f ~/local/nvim.appimage ]]; then
  alias vim='~/local/nvim.appimage'
  alias vi=vim
fi

if [[ -f ~/local/bin/tmux ]]; then
  alias tmux='~/local/bin/tmux'
else
  echo 'need tmux in ~/loca/bin/tmux'
fi

alias gd='git diff'
alias gs='git status'

alias cdr='cd $(git rev-parse --show-toplevel)  2>/dev/null'
alias c='clear'
alias fzf='~/.fzf/bin/fzf'
alias tf='terraform'
alias ssh='ssh -X'
alias rdp='xfreerdp +clipboard'

# init new repo
function ginit () {
  git init
  cp ~/.dotfiles/gitignore .gitignore
  git add .
  git commit -am 'initial commit'
}

function gitl () {
    my_dir=$PWD
    cdr
    git add .
    if test -z "$1"; then
      git commit '-m updates'
    else
      git commit '-m' $1
    fi
    git push
    cd $my_dir
}

function dotp () {
    my_dir=$PWD
    cd ~/.dotfiles
    git pull
    cd $my_dir
}

function dotc () {
    my_dir=$PWD
    cd ~/.dotfiles
    git pull
    git add .
    git commit '-m' 'updates'
    git push
    cd $my_dir
}

function ta () {
  if [ ! -z "$1" ]; then
    tmux new-session -s "$1" || tmux attach -t "$1"
  else
    tmux attach -t main || tmux new-session -s main
  fi
}

# activate virtual environment if there is one in this repo
function va () {
  if [[ -d $(git rev-parse --show-toplevel)/venv ]]; then
    source $(git rev-parse --show-toplevel)/venv/bin/activate
  fi
}

# deactivate virtual environment if there is one in this repo
function vd () {
  deactivate 2> /dev/null
  source $HOME/.virtualenvs/prod3/bin/activate
}

function vc () {
  deactivate 2> /dev/null
  if [ ! -z "$1" ]; then
    venv_dir=$1
    python3 --version
    python3 -m venv $venv_dir
    source $venv_dir/bin/activate
    which python
  elif
    venv_dir=$(git rev-parse --show-toplevel)/venv 2> /dev/null
    if [ "$?" -eq 0 ]; then
      python3 --version
      python3 -m venv $venv_dir
      source $venv_dir/bin/activate
      which python
    else
      venv_dir="venv"
      python3 --version
      python3 -m venv $venv_dir
      source $venv_dir/bin/activate
      which python
  fi
}

function vs () {
  vim $(fzf)
}

# load other functions
if [ -f ~/.zshf ]; then
  source ~/.zshf
fi

function dp() {
  unset http_proxy
  unset https_proxy
  unset all_proxy
  unset no_proxy
  echo "cli proxy destroy done..."
}

# function zz () {
#   # if [ ! -z "$1" ] && [ ! -z "$2" ]; then
#   # tar c /path/to/data | gzip --best > file.tar.gz
#   if [ ! -z "$1" ]; then
#       if ! command -v 7z &> /dev/null; then
#         tar vc "$1" | gzip --best > `echo $1 | tr ' ' '_'`.tar.gz
#       else
#         7z a -t7z -m0=lzma2 -mx=9 -mfb=64 -md=32m -ms=on `echo $1 | tr ' ' '_'`.7z "$1"
#       fi
#     else
#       echo "zz fileordir"
#       echo "output -> fileordir.7z or tgz"
#   fi
# }


# default virtual env if exists
if [[ -f ~/.virtualenvs/prod3/bin/activate ]]; then
  source ~/.virtualenvs/prod3/bin/activate
fi

# disable virtualenv prompt
export VIRTUAL_ENV_DISABLE_PROMPT=1

# autocompletion
zstyle ':completion:*' completer _complete
zstyle ':completion:*' matcher-list '' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' '+l:|=* r:|=*'

# autoload -Uz compinit && compinit -i
autoload -Uz compinit
if [[ -n ${ZDOTDIR:-${HOME}}/$ZSH_COMPDUMP(#qN.mh+24) ]]; then
  compinit -d $ZSH_COMPDUMP;
else
  compinit -C;
fi

export FZF_DEFAULT_OPTS='--height 40% --no-preview'

# pretty colors
export CLICOLOR=1
export LS_COLORS=':ow=01;33'

ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=60'

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

HISTSIZE=5000
# zprof ends profiling
# zprof
