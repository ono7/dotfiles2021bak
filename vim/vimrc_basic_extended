" most basic vim file i need
"
let mapleader = ","
let maplocalleader = "\\"


if has('vim_starting')
  " Be improved
  set nocompatible
endif

if has('unnamedplus')
  set clipboard+=unnamed,unnamedplus
endif

if &shell =~# 'fish$'
    set shell=bash
endif

set background=dark

filetype plugin indent on

syntax on

let loaded_matchparen = 1

" enter normal mode
inoremap jk <Esc>

" much better use of ; and :
noremap ; :
noremap : ;

" move better around line wraps
nmap k gk
nmap j gj

map K <Nop>

" move to begining ^ or end $ of line easier in normal/visual mode
nnoremap H ^
nnoremap L $
vnoremap H ^
vnoremap L $

" more natural re-do command
map U <C-r>

set shortmess+=I                                    " start with no welcome screen
set nobackup nowritebackup noswapfile               " we are both concenting adults here...

set synmaxcol=0
syntax sync minlines=64

set t_Co=256

function! <SID>StripTrailingWhitespaces()
  " saves and restores cursor position
  " after removing whitespace
  let l = line(".")
  let c = col(".")
  %s/\s\+$//e
  call cursor(l, c)
endfun
command! RemoveTrailingWhiteSpaces call <SID>StripTrailingWhitespaces()

augroup _syntax
  autocmd!
  " fix syntax issues on large files
  autocmd BufEnter * :syntax sync maxlines=100
  " autocmd BufEnter * :syntax sync fromstart
augroup END

augroup _set_lcd
  " set local current directory per file as we enter the buffer
  " applies to * all files
  autocmd!
  autocmd BufRead *
        \ let s:tempPath=escape(escape(expand("%:p:h"), ' '), '\ ') |
        \ exec "set path+=".s:tempPath
augroup END

augroup _cursor_last_position
  " restore cursor position when entering file
  autocmd!
  autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif
augroup END

augroup _remove_trailing_whitespace
  " Removes trailing white spaces on save
  autocmd!
  " all files
  autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()
  " filter certain files
augroup END

augroup _ansible
  " ansible and yaml files
  autocmd!
  autocmd filetype yaml,yml,ansible setlocal ai ts=2 sw=2 et fo+=c
  autocmd BufWritePre *.yml :call <SID>StripTrailingWhitespaces() | retab
augroup END


if &diff
    set cursorline
    map ] ]c
    map [ [c
    " dp = diff put -> put changes to the other file
    " do = diff obtain -> get changes from other file

    " hi DiffAdd    ctermfg=233 ctermbg=LightGreen guifg=#003300 guibg=#DDFFDD gui=none cterm=none
    " hi DiffChange ctermbg=white  guibg=#ececec gui=none   cterm=none
    " hi DiffText   ctermfg=233  ctermbg=yellow  guifg=#000033 guibg=#DDDDFF gui=none cterm=none
endif

set wildignore+=*.a,*.o,*.pdf,*.avi,*.ttf,*.rst,*.otf,*.doc,*.docx
set wildignore+=*.bmp,*.jpg,*.png,*.gif,*.m4a,*.db,*.snagproj
set wildignore+=*.swp,*.mp4,*.mp3,*.avi,*.gz,*.tar,*.tgz,*.zip
set wildignore+=*.swp,*.MP4,*.MP3,*.avi,*.JPG,*.xls,*.xlsx,*.pptx
set wildignore+=*.dmg,*.vsd,*.vsdm,*.jar,*.cap,*.pcap,*.numbers,*.xmls
set wildignore+=*.ppt,*.vss,*.plist,*.bz2,*.docx,*.DOC,*.data,*.dat
set wildignore+=*.appcapture,*.cache,*.binarycookies,*.lock,*.cookies,*.collection
set wildignore+=*.crash,*.wav,*.bin,*.svg
set wildignore+=tmp/**,~/.tmp/**,*/Library/*


set matchtime=0                                     " how long to show parenthesis matches
set lazyredraw                                      " dont redraw while executing macros
set redrawtime=10000
set fileformats=unix,dos,mac
set encoding=utf-8
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set smarttab
set hidden
set undolevels=500                                  " add more undo levels & remember more commands
set history=200                                     " command history bump
set nojoinspaces                                    " prevent inserting spaces after puntiation on a join
set ignorecase smartcase incsearch                  " search
set novisualbell noerrorbells                       " stop!
set nowrap
set si                                              " set smart indent, useful for coding
set smartindent                                     " smart indentation..
set showmode                                        " show INSERT/VISUAL/NORMAL if using airline
set diffopt=filler                                  " add vertical spaces to keep right and left aligned
set showcmd                                         " show line count in visual select mode
set pastetoggle=<F2>                                " toggle paste on and off

" edit/reload $MYVIMRC
nnoremap <leader>ve :e $MYVIMRC<cr>
nnoremap <leader>vs :source $MYVIMRC<cr>
nnoremap / /\v
vnoremap / /\v
nnoremap ? ?\v
vnoremap ? ?\v

nnoremap <leader>w :w<CR>

" close file, save etc
nnoremap <leader>x :x!<CR>
nnoremap <leader>qq :q!<CR>
nnoremap <silent><leader>bd :bd<cr>

" cycle through buffers using tab and shift-tab
nnoremap <silent><Tab> :bnext<CR>
nnoremap <silent><S-Tab> :bprevious<CR>

" shift Y yanks till end of line, one for D is baked in
nnoremap Y y$
vmap y ygv<esc>
nnoremap n nzzzv
nnoremap N Nzzzv


" happiness
cnoreabbrev W! w!
cnoreabbrev w1 w!
cnoreabbrev X! x!
cnoreabbrev X1 x!
cnoreabbrev Q! q!
cnoreabbrev Q1 q!
cnoreabbrev q1 q!
cnoreabbrev qq q!
cnoreabbrev bd1 bd!
cnoreabbrev bd bd!
cnoreabbrev Qall! qall!
cnoreabbrev qall1 qall!
cnoreabbrev Wq wq
cnoreabbrev Wa wa
cnoreabbrev wQ wq
cnoreabbrev WQ wq
cnoreabbrev W w
cnoreabbrev Q q
cnoreabbrev Qall qall

" more happiness
ab teh the
ab taht that
ab fro for
ab whlie while
ab anotehr another
ab initilize initialize
ab initilise initialize
ab accross across
ab mitake mistake
ab corected corrected
ab lenght length
ab lenhgt length
ab shoudl should
ab healt health
ab yiedl yield
ab yeild yield
ab Flase False
ab becuase because

hi  my_blue         ctermfg=4    " guifg=#6baeea
hi  my_lightblue    ctermfg=4    " guifg=#6baeea
hi  my_magenta      ctermfg=5    guifg=#af87d7
hi  my_number       ctermfg=3    guifg=#e5c17a
hi  my_yellow       ctermfg=3    guifg=#e5c07b
hi  my_lightyellow  ctermfg=11   guifg=#edbf69
hi  my_red          ctermfg=1    guifg=#e5c17a
hi  my_lightred     ctermfg=9    guifg=#e06c75
hi  my_normal       ctermfg=15   guifg=#c5c8cd
" hi  my_orange       ctermfg=208  guifg=#ff8700
hi  my_cyan         ctermfg=6   guifg=#55b6c2
hi  my_green        ctermfg=2    guifg=#8fb681
hi  my_lightgreen   ctermfg=10   guifg=#8fb681

hi link my_blue_italic        my_blue
hi link my_lightblue_italic   my_lightblue
hi link my_magenta_italic     my_magenta
hi link my_number_italic      my_number
hi link my_yellow_italic      my_yellow
hi link my_lightyellow_italic my_lightyellow
hi link my_red_italic         my_red
hi link my_lightred_italic    my_lightred
hi link my_normal_italic      my_normal
hi link my_orange_italic      my_orange
hi link my_cyan_italic        my_cyan
hi link my_green_italic       my_green
hi link my_lightgreen_italic  my_lightgreen

hi link my_blue_bold        my_blue
hi link my_lightblue_bold   my_lightblue
hi link my_magenta_bold     my_magenta
hi link my_number_bold      my_number
hi link my_yellow_bold      my_yellow
hi link my_lightyellow_bold my_lightyellow
hi link my_red_bold         my_red
hi link my_lightred_bold    my_lightred
hi link my_normal_bold      my_normal
" hi link my_orange_bold      my_orange
hi link my_cyan_bold        my_cyan
hi link my_green_bold       my_green
hi link my_lightgreen_bold  my_lightgreen



" ========== other color overrides ==========

" if, else
hi  Conditional  ctermfg=1  guifg=#af87d7

" repeat = for,while
hi  repeat       ctermfg=1  guifg=#af87d7

" def, return, break
hi  Statement    ctermfg=5  cterm=bold guifg=#af87d7

hi  Define       ctermfg=5  cterm=bold  guifg=#af87d7
hi  Exception    ctermfg=5  guifg=#af87d7

" Numbers
hi  Number  ctermfg=1  guifg=#e5c17a
hi  Float   ctermfg=1  guifg=#e5c17a
" hi MoreMsg  ctermfg=8  guifg=#727b8a
hi ModeMsg  ctermfg=5  guifg=#727b8a
hi MsgArea  ctermfg=8  guifg=#727b8a

" Normal - just plain text
hi  Normal     ctermfg=7  guifg=#c5c8cd
hi  Function   ctermfg=4  guifg=#6baeea
hi  IncSearch  ctermfg=0  ctermbg=3      guifg=#000000  guibg=#e5c17a
hi  Comment    ctermfg=8  guifg=#727b8a
hi  Conceal    ctermfg=8  guifg=#727b8a
hi  Folded     ctermfg=8  guifg=#5c636f
hi  String     ctermfg=2  guifg=#8fb681

" status line
hi  StatusLine    ctermbg=NONE  ctermfg=247  guibg=NONE  guifg=#9e9e9e
hi  StatusLineNC  ctermbg=NONE  ctermfg=244  guibg=NONE  guifg=#6c6c6c

" " visual select
hi  Visual  ctermfg=0  ctermbg=10  guifg=#000000  guibg=#87b966

" " Other
hi  Search   ctermfg=0     ctermbg=5      guifg=#000000  guibg=#af87d7
hi  NonText  ctermfg=8     guifg=#5c636f
hi  LineNr   ctermbg=NONE  ctermfg=8      guibg=NONE     guifg=#5c636f

" Menu drop down/selection
hi  Pmenusel  ctermfg=0   ctermbg=7  guifg=#af87d7  guibg=#c5c8cd
hi  Pmenu     ctermfg=7  ctermbg=0  guibg=#5c636f

" Override vertical split colors
hi  VertSplit  ctermfg=8  ctermbg=NONE  guibg=NONE

" hi Special ctermfg=147 guifg=#c678dd
hi  Special       ctermfg=11  guifg=#c678dd
hi  Error         ctermfg=1  ctermbg=NONE guifg=#e06c75
hi  CursorColumn  ctermbg=8
hi  CursorLine    ctermbg=8

hi  fzf1       ctermfg=4   ctermbg=0
hi  fzf2       ctermfg=4   ctermbg=0
hi  fzf3       ctermfg=4   ctermbg=0
hi  my_fzf_0   ctermbg=0
hi  my_fzf_1   ctermbg=1
hi  my_fzf_2   ctermbg=2
hi  my_fzf_3   ctermbg=3
hi  my_fzf_4   ctermbg=4
hi  my_fzf_5   ctermbg=5
hi  my_fzf_7   ctermbg=7
hi  my_fzf_8   ctermbg=8
hi  my_fzf_15  ctermbg=15

" fzf uses Tabline
hi  TabLine  ctermbg=0  ctermfg=2


